name: yoo-stack

services:
  app:
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-3000}:3000"
    env_file:
      - ../.env
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE_NAME: yoodb
      DB_USER: yooadmin
      DB_PASSWORD: yoopass
      KAFKA_BROKER: kafka:29092
      REDIS_HOST: yoo-redis
      REDIS_PORT: 6379
    depends_on:
      - mysql
      - kafka
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      retries: 5
      timeout: 5s

  mysql:
    image: mysql:8.3
    container_name: yoo-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: yoodb
      MYSQL_USER: yooadmin
      MYSQL_PASSWORD: yoopass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://:9092,INTERNAL://:29092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_NODE_ID: "1"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test:
        [
          "CMD",
          "/opt/kafka/bin/kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      retries: 5
      timeout: 5s

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - kafka

  redis:
    image: redis:7-alpine
    container_name: yoo-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:5540"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - redisinsight_data:/data

volumes:
  mysql_data:
  redis_data:
  kafka_data:
  redisinsight_data:
