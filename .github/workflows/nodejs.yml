name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: yoodb_test
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_USER: yooadmin
          MYSQL_PASSWORD: yoopass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 -uroot -prootpass --silent; do
            echo "Waiting for database connection..."
            sleep 3
          done

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run CI
        run: npm ci

      - name: Build Application
        run: npm run build

      # - name: Run Unit Tests (with Coverage)
      #   run: npm run test:cov

      # - name: Upload unit test coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: ./coverage
      #     fail_ci_if_error: true
      #     flags: unittests
      #     verbose: true

      # - name: Run E2E Tests (with Coverage)
      #   run: npm run test:e2e:cov

      # - name: Upload E2E test coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: ./coverage-e2e
      #     fail_ci_if_error: true
      #     flags: e2etests
      #     verbose: true
